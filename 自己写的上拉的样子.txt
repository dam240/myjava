
      Handler handler=new Handler(){

          @Override
          public void handleMessage(Message msg) {

              switch (msg.what) {
                  case 1:   list.add(msg.obj.toString());
                  io.notifyDataSetChanged();
                  break;
                  case 2:

                      list.remove(list.size()-1);
                     // io.notifyDataSetChanged();

                         list.addAll((Collection<? extends String>) msg.obj);
                      io.notifyDataSetChanged();

                       aBoolean=true;
                  break;
                  case  3:
                      list.remove(list.size()-1);
                      io.notifyDataSetChanged();

                      aBoolean=true;
                      Toast.makeText(MainActivity.this,"没有更多数据",Toast.LENGTH_SHORT).show();
                      break;
              }
          }
      };



    private  void  init(){
        recyclerView= (RecyclerView) findViewById(R.id.list);
        recyclerView.setItemAnimator(new DefaultItemAnimator());
         recyclerView.setLayoutManager(new LinearLayoutManager(this));

        list=new ArrayList<>();
        for(int i=0;i<10;i++){
            list.add("B");

        }
        io=new adaction(list,this);
         recyclerView.setAdapter(io);

      //RecyclerView.LayoutManager k= recyclerView.getLayoutManager();


          io.setLi(new adaction.lis() {
              @Override
              public void boi(int cout) {
                 //list.add("A");
                  //io.notifyItemInserted(list.size()+1);
                 // aBoolean=true;
                  if(aBoolean) {
                      new Thread() {
                          @Override
                          public void run() {
                              aBoolean = false;



                                  Message message = handler.obtainMessage();
                                  message.obj = "A";
                                  message.what = 1;

                                  handler.sendMessage(message);


                                  try {
                                      sleep(2000);
                                  } catch (InterruptedException e) {
                                      e.printStackTrace();
                                  }

                                  // message.obj = "A";
                              Message message1 = handler.obtainMessage();
                              if (ic != 5) {
                                  ic++;

                                  List<String> list1 = new ArrayList<String>();
                                  for (int i = 0; i < 10; i++) {
                                      list1.add("B");

                                  }
                                  message1.obj = list1;
                                  message1.what = 2;
                                  handler.sendMessage(message1);

                              }else {

                                  message1.what = 3;
                                  handler.sendMessage(message1);
                              }


                              }

                      }.start();


                  }


              }
          });







    }

